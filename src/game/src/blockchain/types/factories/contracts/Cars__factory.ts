/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../common";
import type { Cars, CarsInterface } from "../../contracts/Cars";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "want",
        type: "address",
      },
    ],
    name: "OnlyCoordinatorCanFulfill",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "RequestFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "numWords",
        type: "uint32",
      },
    ],
    name: "RequestSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllOnSale",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "bool",
            name: "isOnSale",
            type: "bool",
          },
        ],
        internalType: "struct Cars.TokenMeta[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_requestId",
        type: "uint256",
      },
    ],
    name: "getRequestStatus",
    outputs: [
      {
        internalType: "bool",
        name: "fulfilled",
        type: "bool",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenCreatorById",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokensCreatedByMe",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokensOwnedByMe",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastRequestId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isOnSale",
        type: "bool",
      },
    ],
    name: "mintCollectable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "purchaseToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "randomMint",
    outputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "randomNum",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "rawFulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "requestIdToSender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "requestIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "s_requests",
    outputs: [
      {
        internalType: "bool",
        name: "fulfilled",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newBaseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setTokenPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isOnSale",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setTokenSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenMeta",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "bool",
            name: "isOnSale",
            type: "bool",
          },
        ],
        internalType: "struct Cars.TokenMeta",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "updateTokenUri",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040527f4b09e658ed251bcafeebbc69400383d49f344ace09b9576fe248bb02c003fe9f601055601180546001600160501b03191666010003000186a01790553480156200004e57600080fd5b5033806000737a1bac17ccc5b313516c5e16fb24f7659aa5ebed6040518060400160405280600b81526020016a5a6f6d626178204361727360a81b8152506040518060400160405280600381526020016221a0a960e91b8152508160009081620000b99190620002e2565b506001620000c88282620002e2565b5050506001600160a01b0390811660805282166200012d5760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600680546001600160a01b0319166001600160a01b03848116919091179091558116156200016057620001608162000191565b5050600d80546001600160e01b031916750a447a1bac17ccc5b313516c5e16fb24f7659aa5ebed17905550620003ae565b336001600160a01b03821603620001eb5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015260640162000124565b600780546001600160a01b0319166001600160a01b03838116918217909255600654604051919216907fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127890600090a350565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200026857607f821691505b6020821081036200028957634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002dd57600081815260208120601f850160051c81016020861015620002b85750805b601f850160051c820191505b81811015620002d957828155600101620002c4565b5050505b505050565b81516001600160401b03811115620002fe57620002fe6200023d565b62000316816200030f845462000253565b846200028f565b602080601f8311600181146200034e5760008415620003355750858301515b600019600386901b1c1916600185901b178555620002d9565b600085815260208120601f198616915b828110156200037f578886015182559484019460019091019084016200035e565b50858210156200039e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b608051613328620003d160003960008181610c5d0152610c9f01526133286000f3fe60806040526004361061024f5760003560e01c80638796ba8c11610138578063c87b56dd116100b0578063e985e9c51161007f578063f2fde38b11610064578063f2fde38b1461071c578063f630aa651461073c578063fc2a88c31461075257600080fd5b8063e985e9c5146106b3578063eb685c47146106fc57600080fd5b8063c87b56dd14610625578063d31af48414610645578063d4ddce8a14610665578063d8a4676f1461068557600080fd5b806395d89b4111610107578063a22cb465116100ec578063a22cb465146105d2578063b88d4fde146105f2578063c2db2c421461061257600080fd5b806395d89b411461056d578063a168fa891461058257600080fd5b80638796ba8c146104d75780638da5cb5b146104f75780638e2de4d314610515578063908945591461054b57600080fd5b806342842e0e116101cb5780636387ede61161019a57806379ba50971161017f57806379ba5097146104775780637e1eaabf1461048c578063867d3397146104a157600080fd5b80636387ede61461043757806370a082311461045757600080fd5b806342842e0e146103c257806355f804b3146103e25780635ba37742146104025780636352211e1461041757600080fd5b80630a989d9c116102225780631fe543e3116102075780631fe543e31461035457806323b872dd1461037457806339b444361461039457600080fd5b80630a989d9c146103055780630ae7a3101461032757600080fd5b806301ffc9a71461025457806306fdde0314610289578063081812fc146102ab578063095ea7b3146102e3575b600080fd5b34801561026057600080fd5b5061027461026f36600461296c565b610768565b60405190151581526020015b60405180910390f35b34801561029557600080fd5b5061029e6107ba565b60405161028091906129d9565b3480156102b757600080fd5b506102cb6102c63660046129ec565b61084c565b6040516001600160a01b039091168152602001610280565b3480156102ef57600080fd5b506103036102fe366004612a21565b610873565b005b34801561031157600080fd5b5061031a6109ab565b6040516102809190612a86565b34801561033357600080fd5b506103476103423660046129ec565b610a90565b6040516102809190612af4565b34801561036057600080fd5b5061030361036f366004612b4e565b610c52565b34801561038057600080fd5b5061030361038f366004612c00565b610cda565b3480156103a057600080fd5b506103b46103af366004612cc4565b610d51565b604051908152602001610280565b3480156103ce57600080fd5b506103036103dd366004612c00565b610dea565b3480156103ee57600080fd5b506103036103fd366004612d53565b610e05565b34801561040e57600080fd5b5061031a610e19565b34801561042357600080fd5b506102cb6104323660046129ec565b610f50565b34801561044357600080fd5b50610303610452366004612d88565b610fb5565b34801561046357600080fd5b506103b4610472366004612dad565b611090565b34801561048357600080fd5b5061030361112a565b34801561049857600080fd5b506103b46111df565b3480156104ad57600080fd5b506102cb6104bc3660046129ec565b6000908152600a60205260409020546001600160a01b031690565b3480156104e357600080fd5b506103b46104f23660046129ec565b6113cb565b34801561050357600080fd5b506006546001600160a01b03166102cb565b34801561052157600080fd5b506102cb6105303660046129ec565b6013602052600090815260409020546001600160a01b031681565b34801561055757600080fd5b506105606113ec565b6040516102809190612dc8565b34801561057957600080fd5b5061029e611660565b34801561058e57600080fd5b506105bb61059d3660046129ec565b600c6020526000908152604090205460ff8082169161010090041682565b604080519215158352901515602083015201610280565b3480156105de57600080fd5b506103036105ed366004612e2a565b61166f565b3480156105fe57600080fd5b5061030361060d366004612e5d565b61167a565b6103036106203660046129ec565b6116f8565b34801561063157600080fd5b5061029e6106403660046129ec565b6117be565b34801561065157600080fd5b50610303610660366004612ed9565b611825565b34801561067157600080fd5b506103b46106803660046129ec565b61187e565b34801561069157600080fd5b506106a56106a03660046129ec565b61191e565b604051610280929190612f20565b3480156106bf57600080fd5b506102746106ce366004612f3b565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561070857600080fd5b50610303610717366004612f65565b611a1e565b34801561072857600080fd5b50610303610737366004612dad565b611ada565b34801561074857600080fd5b506103b460125481565b34801561075e57600080fd5b506103b4600f5481565b60006001600160e01b031982166380ac58cd60e01b148061079957506001600160e01b03198216635b5e139f60e01b145b806107b457506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546107c990612f87565b80601f01602080910402602001604051908101604052809291908181526020018280546107f590612f87565b80156108425780601f1061081757610100808354040283529160200191610842565b820191906000526020600020905b81548152906001019060200180831161082557829003601f168201915b5050505050905090565b600061085782611aee565b506000908152600460205260409020546001600160a01b031690565b600061087e82610f50565b9050806001600160a01b0316836001600160a01b0316036108f05760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061092a57506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b61099c5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016108e7565b6109a68383611b52565b505050565b606060006109b860085490565b905060006109c533611090565b905060008167ffffffffffffffff8111156109e2576109e2612b07565b604051908082528060200260200182016040528015610a0b578160200160208202803683370190505b5090506000805b84811015610a86576000610a27826001612fd7565b905033610a3382610f50565b6001600160a01b031614610a475750610a74565b80848481518110610a5a57610a5a612fea565b6020908102919091010152610a70600184612fd7565b9250505b80610a7e81613000565b915050610a12565b5090949350505050565b610ac46040518060a00160405280600081526020016000815260200160608152602001606081526020016000151581525090565b6000828152600260205260409020546001600160a01b0316610ae557600080fd5b600960008381526020019081526020016000206040518060a00160405290816000820154815260200160018201548152602001600282018054610b2790612f87565b80601f0160208091040260200160405190810160405280929190818152602001828054610b5390612f87565b8015610ba05780601f10610b7557610100808354040283529160200191610ba0565b820191906000526020600020905b815481529060010190602001808311610b8357829003601f168201915b50505050508152602001600382018054610bb990612f87565b80601f0160208091040260200160405190810160405280929190818152602001828054610be590612f87565b8015610c325780601f10610c0757610100808354040283529160200191610c32565b820191906000526020600020905b815481529060010190602001808311610c1557829003601f168201915b50505091835250506004919091015460ff16151560209091015292915050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ccc5760405163073e64fd60e21b81523360048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201526044016108e7565b610cd68282611bc0565b5050565b610ce43382611e7c565b610d465760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b60648201526084016108e7565b6109a6838383611efb565b6000610d5b6120e8565b60008311610d6857600080fd5b610d76600880546001019055565b6000610d8160085490565b9050610d8d8782612144565b6000818152600a602090815260409182902080546001600160a01b03191633179055815160a081018352838152908101869052908101869052606081018790528315156080820152610ddf82826122dd565b509695505050505050565b6109a68383836040518060200160405280600081525061167a565b610e0d6120e8565b600b610cd68282613067565b60606000610e2660085490565b90506000805b82811015610e89576000610e41826001612fd7565b6000818152600a60205260409020549091506001600160a01b03163314610e685750610e77565b610e73600184612fd7565b9250505b80610e8181613000565b915050610e2c565b5060008167ffffffffffffffff811115610ea557610ea5612b07565b604051908082528060200260200182016040528015610ece578160200160208202803683370190505b5090506000805b84811015610a86576000610eea826001612fd7565b6000818152600a60205260409020549091506001600160a01b03163314610f115750610f3e565b80848481518110610f2457610f24612fea565b6020908102919091010152610f3a600184612fd7565b9250505b80610f4881613000565b915050610ed5565b6000818152600260205260408120546001600160a01b0316806107b45760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e204944000000000000000060448201526064016108e7565b6000838152600260205260409020546001600160a01b031661103f5760405162461bcd60e51b815260206004820152602d60248201527f4552433732314d657461646174613a2053616c6520736574206f66206e6f6e6560448201527f78697374656e7420746f6b656e0000000000000000000000000000000000000060648201526084016108e7565b6000811161104c57600080fd5b3361105684610f50565b6001600160a01b03161461106957600080fd5b6000838152600960205260409020600401805460ff19168315151790556109a68382611a1e565b60006001600160a01b03821661110e5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e6572000000000000000000000000000000000000000000000060648201526084016108e7565b506001600160a01b031660009081526003602052604090205490565b6007546001600160a01b031633146111845760405162461bcd60e51b815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e65720000000000000000000060448201526064016108e7565b600680546001600160a01b0319808216339081179093556007805490911690556040516001600160a01b03909116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a350565b600d546010546011546040516305d3b1d360e41b8152600481019290925274010000000000000000000000000000000000000000830467ffffffffffffffff166024830152640100000000810461ffff16604483015263ffffffff808216606484015266010000000000009091041660848201526000916001600160a01b031690635d3b1d309060a4016020604051808303816000875af1158015611288573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ac9190613127565b6040805160608101825260008082526001602080840182815285518481528083018752858701908152878552600c83529590932084518154945161ffff1990951690151561ff0019161761010094151594909402939093178355935180519596509294919361132193918501929101906128f6565b5050600e8054600181019091557fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd0182905550600f8190556000818152601360209081526040918290208054336001600160a01b03199091161790556011548251848152660100000000000090910463ffffffff16918101919091527fcc58b13ad3eab50626c6a6300b1d139cd6ebb1688a7cced9461c2f7e762665ee910160405180910390a190565b600e81815481106113db57600080fd5b600091825260209091200154905081565b606060006113f960085490565b67ffffffffffffffff81111561141157611411612b07565b60405190808252806020026020018201604052801561147657816020015b6114636040518060a00160405280600081526020016000815260200160608152602001606081526020016000151581525090565b81526020019060019003908161142f5790505b509050600060015b60085461148c906001612fd7565b8110156116585760008181526009602052604090206004015460ff16151560010361164657600960008281526020019081526020016000206040518060a001604052908160008201548152602001600182015481526020016002820180546114f390612f87565b80601f016020809104026020016040519081016040528092919081815260200182805461151f90612f87565b801561156c5780601f106115415761010080835404028352916020019161156c565b820191906000526020600020905b81548152906001019060200180831161154f57829003601f168201915b5050505050815260200160038201805461158590612f87565b80601f01602080910402602001604051908101604052809291908181526020018280546115b190612f87565b80156115fe5780601f106115d3576101008083540402835291602001916115fe565b820191906000526020600020905b8154815290600101906020018083116115e157829003601f168201915b50505091835250506004919091015460ff161515602090910152835184908490811061162c5761162c612fea565b6020026020010181905250818061164290613000565b9250505b8061165081613000565b91505061147e565b509092915050565b6060600180546107c990612f87565b610cd6338383612385565b6116843383611e7c565b6116e65760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b60648201526084016108e7565b6116f284848484612453565b50505050565b3315801590611721575061170b81610f50565b6001600160a01b0316336001600160a01b031614155b61172a57600080fd5b60008181526009602052604090206001015434101561174857600080fd5b600061175382610f50565b6040519091506001600160a01b038216903480156108fc02916000818181858888f1935050505015801561178b573d6000803e3d6000fd5b5061179781600161166f565b6117a2813384611efb565b506000908152600960205260409020600401805460ff19169055565b60606117c982611aee565b60006117d36124dc565b905060008151116117f3576040518060200160405280600081525061181e565b806117fd846124eb565b60405160200161180e929190613140565b6040516020818303038152906040525b9392505050565b6000828152600260205260409020546001600160a01b031661184657600080fd5b3361185083610f50565b6001600160a01b03161461186357600080fd5b60008281526009602052604090206003016109a68282613067565b6000818152600260205260408120546001600160a01b03166119085760405162461bcd60e51b815260206004820152603160248201527f4552433732314d657461646174613a20507269636520717565727920666f722060448201527f6e6f6e6578697374656e7420746f6b656e00000000000000000000000000000060648201526084016108e7565b5060009081526009602052604090206001015490565b6000818152600c6020526040812054606090610100900460ff166119845760405162461bcd60e51b815260206004820152601160248201527f72657175657374206e6f7420666f756e6400000000000000000000000000000060448201526064016108e7565b6000838152600c602090815260408083208151606081018352815460ff80821615158352610100909104161515818501526001820180548451818702810187018652818152929593948601938301828280156119ff57602002820191906000526020600020905b8154815260200190600101908083116119eb575b5050505050815250509050806000015181604001519250925050915091565b6000828152600260205260409020546001600160a01b0316611aa85760405162461bcd60e51b815260206004820152602e60248201527f4552433732314d657461646174613a20507269636520736574206f66206e6f6e60448201527f6578697374656e7420746f6b656e00000000000000000000000000000000000060648201526084016108e7565b33611ab283610f50565b6001600160a01b031614611ac557600080fd5b60009182526009602052604090912060010155565b611ae26120e8565b611aeb8161258b565b50565b6000818152600260205260409020546001600160a01b0316611aeb5760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e204944000000000000000060448201526064016108e7565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611b8782610f50565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000828152600c6020526040902054610100900460ff16611c235760405162461bcd60e51b815260206004820152601160248201527f72657175657374206e6f7420666f756e6400000000000000000000000000000060448201526064016108e7565b6000828152600c60209081526040909120805460ff1916600190811782558351611c549392909101918401906128f6565b507ffe2e2d779dba245964d4e3ef9b994be63856fd568bf7d3ca9e224755cb1bd54d8282604051611c8692919061316f565b60405180910390a180600081518110611ca157611ca1612fea565b60200260200101516012819055506000604051806040016040528060018152602001600360fc1b81525090506000611ce66002601254611ce19190613188565b6124eb565b90506000611cfc6001601254611ce19190613188565b90506000611d126002601254611ce19190613188565b90506000611d286001601254611ce19190613188565b90506000611d3e6004601254611ce19190613188565b90506000611d546004601254611ce19190613188565b90506000611d6a6001601254611ce19190613188565b905060008888888888888888604051602001611d8d9897969594939291906131aa565b6040516020818303038152906040529050611dac600880546001019055565b6000611db760085490565b60008d8152601360205260409020549091506001600160a01b0316611ddc8183612144565b6000828152600a6020908152604080832080546001600160a01b0319166001600160a01b038616179055805160a081018252858152620f42408184015281518083018352600b81527f47656e65736973204361720000000000000000000000000000000000000000009381019390935290810191909152606081018590526080810191909152611e6c83826122dd565b5050505050505050505050505050565b600080611e8883610f50565b9050806001600160a01b0316846001600160a01b03161480611ecf57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80611ef35750836001600160a01b0316611ee88461084c565b6001600160a01b0316145b949350505050565b826001600160a01b0316611f0e82610f50565b6001600160a01b031614611f725760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016108e7565b6001600160a01b038216611fd45760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016108e7565b611fe18383836001612635565b826001600160a01b0316611ff482610f50565b6001600160a01b0316146120585760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016108e7565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6006546001600160a01b031633146121425760405162461bcd60e51b815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000060448201526064016108e7565b565b6001600160a01b03821661219a5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016108e7565b6000818152600260205260409020546001600160a01b0316156121ff5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016108e7565b61220d600083836001612635565b6000818152600260205260409020546001600160a01b0316156122725760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016108e7565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000828152600260205260409020546001600160a01b03166122fe57600080fd5b3361230883610f50565b6001600160a01b03161461231b57600080fd5b600082815260096020908152604091829020835181559083015160018201559082015182919060028201906123509082613067565b50606082015160038201906123659082613067565b50608091909101516004909101805460ff19169115159190911790555050565b816001600160a01b0316836001600160a01b0316036123e65760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016108e7565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61245e848484611efb565b61246a848484846126bd565b6116f25760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e746572000000000000000000000000000060648201526084016108e7565b6060600b80546107c990612f87565b606060006124f883612814565b600101905060008167ffffffffffffffff81111561251857612518612b07565b6040519080825280601f01601f191660200182016040528015612542576020820181803683370190505b5090508181016020015b600019017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a850494508461254c57509392505050565b336001600160a01b038216036125e35760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016108e7565b600780546001600160a01b0319166001600160a01b03838116918217909255600654604051919216907fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127890600090a350565b60018111156116f2576001600160a01b0384161561267b576001600160a01b038416600090815260036020526040812080548392906126759084906132af565b90915550505b6001600160a01b038316156116f2576001600160a01b038316600090815260036020526040812080548392906126b2908490612fd7565b909155505050505050565b60006001600160a01b0384163b1561280957604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906127019033908990889088906004016132c2565b6020604051808303816000875af192505050801561273c575060408051601f3d908101601f19168201909252612739918101906132fe565b60015b6127ef573d80801561276a576040519150601f19603f3d011682016040523d82523d6000602084013e61276f565b606091505b5080516000036127e75760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e746572000000000000000000000000000060648201526084016108e7565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611ef3565b506001949350505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061285d577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310612889576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106128a757662386f26fc10000830492506010015b6305f5e10083106128bf576305f5e100830492506008015b61271083106128d357612710830492506004015b606483106128e5576064830492506002015b600a83106107b45760010192915050565b828054828255906000526020600020908101928215612931579160200282015b82811115612931578251825591602001919060010190612916565b5061293d929150612941565b5090565b5b8082111561293d5760008155600101612942565b6001600160e01b031981168114611aeb57600080fd5b60006020828403121561297e57600080fd5b813561181e81612956565b60005b838110156129a457818101518382015260200161298c565b50506000910152565b600081518084526129c5816020860160208601612989565b601f01601f19169290920160200192915050565b60208152600061181e60208301846129ad565b6000602082840312156129fe57600080fd5b5035919050565b80356001600160a01b0381168114612a1c57600080fd5b919050565b60008060408385031215612a3457600080fd5b612a3d83612a05565b946020939093013593505050565b600081518084526020808501945080840160005b83811015612a7b57815187529582019590820190600101612a5f565b509495945050505050565b60208152600061181e6020830184612a4b565b80518252602081015160208301526000604082015160a06040850152612ac260a08501826129ad565b905060608301518482036060860152612adb82826129ad565b9150506080830151151560808501528091505092915050565b60208152600061181e6020830184612a99565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612b4657612b46612b07565b604052919050565b60008060408385031215612b6157600080fd5b8235915060208084013567ffffffffffffffff80821115612b8157600080fd5b818601915086601f830112612b9557600080fd5b813581811115612ba757612ba7612b07565b8060051b9150612bb8848301612b1d565b8181529183018401918481019089841115612bd257600080fd5b938501935b83851015612bf057843582529385019390850190612bd7565b8096505050505050509250929050565b600080600060608486031215612c1557600080fd5b612c1e84612a05565b9250612c2c60208501612a05565b9150604084013590509250925092565b600067ffffffffffffffff831115612c5657612c56612b07565b612c69601f8401601f1916602001612b1d565b9050828152838383011115612c7d57600080fd5b828260208301376000602084830101529392505050565b600082601f830112612ca557600080fd5b61181e83833560208501612c3c565b80358015158114612a1c57600080fd5b600080600080600060a08688031215612cdc57600080fd5b612ce586612a05565b9450602086013567ffffffffffffffff80821115612d0257600080fd5b612d0e89838a01612c94565b95506040880135915080821115612d2457600080fd5b50612d3188828901612c94565b93505060608601359150612d4760808701612cb4565b90509295509295909350565b600060208284031215612d6557600080fd5b813567ffffffffffffffff811115612d7c57600080fd5b611ef384828501612c94565b600080600060608486031215612d9d57600080fd5b83359250612c2c60208501612cb4565b600060208284031215612dbf57600080fd5b61181e82612a05565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612e1d57603f19888603018452612e0b858351612a99565b94509285019290850190600101612def565b5092979650505050505050565b60008060408385031215612e3d57600080fd5b612e4683612a05565b9150612e5460208401612cb4565b90509250929050565b60008060008060808587031215612e7357600080fd5b612e7c85612a05565b9350612e8a60208601612a05565b925060408501359150606085013567ffffffffffffffff811115612ead57600080fd5b8501601f81018713612ebe57600080fd5b612ecd87823560208401612c3c565b91505092959194509250565b60008060408385031215612eec57600080fd5b82359150602083013567ffffffffffffffff811115612f0a57600080fd5b612f1685828601612c94565b9150509250929050565b8215158152604060208201526000611ef36040830184612a4b565b60008060408385031215612f4e57600080fd5b612f5783612a05565b9150612e5460208401612a05565b60008060408385031215612f7857600080fd5b50508035926020909101359150565b600181811c90821680612f9b57607f821691505b602082108103612fbb57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156107b4576107b4612fc1565b634e487b7160e01b600052603260045260246000fd5b60006001820161301257613012612fc1565b5060010190565b601f8211156109a657600081815260208120601f850160051c810160208610156130405750805b601f850160051c820191505b8181101561305f5782815560010161304c565b505050505050565b815167ffffffffffffffff81111561308157613081612b07565b6130958161308f8454612f87565b84613019565b602080601f8311600181146130ca57600084156130b25750858301515b600019600386901b1c1916600185901b17855561305f565b600085815260208120601f198616915b828110156130f9578886015182559484019460019091019084016130da565b50858210156131175787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020828403121561313957600080fd5b5051919050565b60008351613152818460208801612989565b835190830190613166818360208801612989565b01949350505050565b828152604060208201526000611ef36040830184612a4b565b6000826131a557634e487b7160e01b600052601260045260246000fd5b500690565b7f68747470733a2f2f7a6f6d6261782e696f2f6173736574732f636172732f000081526000601e8a516131e38183860160208f01612989565b8a51908401906131f98184840160208f01612989565b8a5191019061320e8184840160208e01612989565b89519101906132238184840160208d01612989565b88519101906132388184840160208c01612989565b875191019061324d8184840160208b01612989565b86519101906132628184840160208a01612989565b85519101906132778184840160208901612989565b7f2e6a736f6e0000000000000000000000000000000000000000000000000000009101918201526023019a9950505050505050505050565b818103818111156107b4576107b4612fc1565b60006001600160a01b038087168352808616602084015250836040830152608060608301526132f460808301846129ad565b9695505050505050565b60006020828403121561331057600080fd5b815161181e8161295656fea164736f6c6343000811000a";

type CarsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CarsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Cars__factory extends ContractFactory {
  constructor(...args: CarsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Cars> {
    return super.deploy(overrides || {}) as Promise<Cars>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Cars {
    return super.attach(address) as Cars;
  }
  override connect(signer: Signer): Cars__factory {
    return super.connect(signer) as Cars__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CarsInterface {
    return new utils.Interface(_abi) as CarsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Cars {
    return new Contract(address, _abi, signerOrProvider) as Cars;
  }
}
